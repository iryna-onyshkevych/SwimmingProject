@*@model IEnumerable<DTO.Models.CoachDTO>*@
@using SwimmingWebApp.ViewModels;
@model IndexViewModel
@{
    ViewBag.Title = "Coaches";
}
<a asp-action="Create">Add coach</a>
<a asp-action="Delete">Delete coach</a>
<a asp-action="Update">Update coach</a>
@using (Html.BeginForm())
{
    <p>
        Find by name: @Html.TextBox("SearchString")
        <input type="submit" value="Search" />
    </p>
}
<h1>All Coaches</h1>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th>
            First Name
        </th>
        <th>
            @Html.ActionLink("Work Experience", "Index", new { sortOrder = ViewBag.DateSortParm })
        </th>
        <th></th>
    </tr>

    @foreach (CoachDTO u in Model.Coaches)
    {
        <tr><td>@u.FirstName</td><td>@u.LastName</td><td>@u.WorkExperience</td></tr>
    }
</table>
@if (Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
       class="btn btn-outline-dark">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Back
    </a>
}
@if (Model.PageViewModel.HasNextPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
       class="btn btn-outline-dark">
        Forward
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
}
